// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using kempsoft.Models.DataBase;

namespace kempsoft.Migrations
{
    [DbContext(typeof(softkempContext))]
    [Migration("20211110072642_AddEmailTable")]
    partial class AddEmailTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("kempsoft.Models.DataBase.EmailsSender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.HasKey("Id");

                    b.ToTable("EmailSender");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactName");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contactPhone");

                    b.Property<short?>("CountDays")
                        .HasColumnType("smallint")
                        .HasColumnName("countDays");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<string>("OrderId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("orderId");

                    b.Property<short?>("PriceId")
                        .HasColumnType("smallint")
                        .HasColumnName("priceId");

                    b.Property<decimal?>("SumPayment")
                        .HasColumnType("money");

                    b.Property<string>("UserId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("userId");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.PaymentsStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime")
                        .HasColumnName("dateCreated");

                    b.Property<int?>("IdPayment")
                        .HasColumnType("int")
                        .HasColumnName("idPayment");

                    b.Property<short?>("IdStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("idStatus");

                    b.HasKey("Id");

                    b.HasIndex("IdPayment");

                    b.HasIndex("IdStatus");

                    b.ToTable("PaymentsStatuses");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.Price", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<short?>("IdTypePrice")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Price1")
                        .HasColumnType("money")
                        .HasColumnName("Price");

                    b.HasKey("Id");

                    b.HasIndex("IdTypePrice");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.ReadyProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("logoImg");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProjectImg")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProjectRoute")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TasksProject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReadyProjects");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.StatusPay", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StatusPay");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.TypePrice", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypePrices");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.Payment", b =>
                {
                    b.HasOne("kempsoft.Models.DataBase.Price", "Price")
                        .WithMany("Payments")
                        .HasForeignKey("PriceId")
                        .HasConstraintName("FK_Payment_Prices");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.PaymentsStatus", b =>
                {
                    b.HasOne("kempsoft.Models.DataBase.Payment", "IdPaymentNavigation")
                        .WithMany("PaymentsStatuses")
                        .HasForeignKey("IdPayment")
                        .HasConstraintName("FK_PaymentsStatuses_Payment");

                    b.HasOne("kempsoft.Models.DataBase.StatusPay", "IdStatusNavigation")
                        .WithMany("PaymentsStatuses")
                        .HasForeignKey("IdStatus")
                        .HasConstraintName("FK_PaymentsStatuses_StatusPay");

                    b.Navigation("IdPaymentNavigation");

                    b.Navigation("IdStatusNavigation");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.Price", b =>
                {
                    b.HasOne("kempsoft.Models.DataBase.TypePrice", "IdTypePriceNavigation")
                        .WithMany("Prices")
                        .HasForeignKey("IdTypePrice")
                        .HasConstraintName("FK_Prices_TypePrices")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdTypePriceNavigation");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.Payment", b =>
                {
                    b.Navigation("PaymentsStatuses");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.Price", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.StatusPay", b =>
                {
                    b.Navigation("PaymentsStatuses");
                });

            modelBuilder.Entity("kempsoft.Models.DataBase.TypePrice", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
